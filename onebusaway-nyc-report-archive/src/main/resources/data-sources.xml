<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2011 Metropolitan Transportation Authority

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy of
    the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations under
    the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Database Connection Configuration -->
    <bean id="dataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/jdbc/archiveDB"/>   
      <property name="lookupOnStartup"
                value="true"/>   
      <property name="cache"
                value="true"/>   
      <property name="proxyInterface"
                value="javax.sql.DataSource"/>   
      <property name="resourceRef"
                value="true" />
    </bean>
    
    <bean id="slaveDataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/jdbc/slaveDB"/>   
      <property name="lookupOnStartup"
                value="true"/>   
      <property name="cache"
                value="true"/>   
      <property name="proxyInterface"
                value="javax.sql.DataSource"/>   
      <property name="resourceRef"
                value="true" />
    </bean>

    <alias name="dataSource" alias="mutableDataSource" />
    
    <bean id="webappHibernateProperties" class="org.onebusaway.container.spring.PropertiesBeanPostProcessor">
        <property name="target" value="hibernateProperties" />
    </bean> 


  <bean id="transitDataManagerApiLibrary" class="org.onebusaway.nyc.util.impl.tdm.TransitDataManagerApiLibrary">
    <constructor-arg type="java.lang.String" value="${tdm.host}" />
    <constructor-arg type="java.lang.Integer" value="80" />
    <constructor-arg type="java.lang.String" value="/api/" />
  </bean>

    <!-- Input and Inference Queue Configuration -->
  <bean id="realtimeCache" class="org.onebusaway.nyc.report.impl.CcLocationCache"
    scope="singleton">
    <constructor-arg value="200000"/>
  </bean>
  <bean id="bhsInputQueue" class="org.onebusaway.nyc.report_archive.queue.ArchivingInputQueueListenerTask">
  </bean>
  <bean id="output_queue" class="org.onebusaway.nyc.report_archive.queue.ArchivingInferenceQueueListenerTask">
  </bean>
  
  <!-- Transit Data Service -->
    
  <bean id="nycTransitDataService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
       <property name="serviceUrl" value="${tds.path}/remoting/transit-data-service" />
       <property name="serviceInterface" value="org.onebusaway.nyc.transit_data.services.NycTransitDataService" />
  </bean>
  
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.onebusaway.nyc.report.model.CcLocationReportRecord</value>
				<value>org.onebusaway.nyc.report.model.InvalidLocationRecord</value>
				<value>org.onebusaway.nyc.report.model.ArchivedInferredLocationRecord</value>
				<value>org.onebusaway.nyc.report.model.CcAndInferredLocationRecord</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.pool_size">1</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
        <prop key="hibernate.jdbc.batch_size">1000</prop>
	    	<prop key="hibernate.order_inserts">false</prop>
       	<prop key="hibernate.order_updates">false</prop>
			</props>
		</property>
	</bean>
	
	<bean id="slaveSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="slaveDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.onebusaway.nyc.report.model.CcLocationReportRecord</value>
				<value>org.onebusaway.nyc.report.model.ArchivedInferredLocationRecord</value>
				<value>org.onebusaway.nyc.report.model.CcAndInferredLocationRecord</value>
				<value>org.onebusaway.nyc.report.model.InvalidLocationRecord</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.pool_size">1</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
       	<prop key="hibernate.jdbc.batch_size">1000</prop>
       	<prop key="hibernate.order_inserts">false</prop>
       	<prop key="hibernate.order_updates">false</prop>
       	<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="transactionManagerSlave" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="slaveSessionFactory" />
        <qualifier value="slaveDB"/>
    </bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
    <tx:annotation-driven transaction-manager="transactionManagerSlave"/>
	
	
</beans>
